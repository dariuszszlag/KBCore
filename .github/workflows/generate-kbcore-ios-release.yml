name: Create KBCore (iOS)

on:
  push:
    tags:
      - "*.*.*"

  workflow_dispatch:

jobs:
  kbcore-publish:
    name: Create KBCore for iOS
    concurrency: "kbcore-publish-${{ github.repository }}"
    runs-on: macos-latest
    steps:

    - name: Checkout the repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set Up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: temurin

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Cache build tooling
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.konan
        key: ${{ runner.os }}-v4-${{ hashFiles('*.gradle.kts') }}

    - name: Change wrapper permissions
      run: chmod +x ./gradlew

    - name: Create Package.swift file and XCFramework
      run: ./gradlew :kbcore:createSwiftPackage -PGIT_USER=${{ github.actor }} -PGIT_TOKEN=${{ secrets.SECRET_GITHUB_CODE }} -PGITHUB_REPO=${{ github.repository }}

    - name: Setup Git user
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        
    - name: Commit necessary files
      run: |
        git pull origin main
        git checkout -b "commit-package-swift-${GITHUB_REF#refs/*/}"
        git add Package.swift
        git commit -m "Package.swift for v${GITHUB_REF#refs/*/}"

    - name: Set last commit's hash as github env
      run: echo "LAST_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set current branch name as github env
      run: echo "CURRENT_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV

    - name: Set tag for the commit and merge
      run: | 
        git tag -a ${GITHUB_REF#refs/*/} ${{ env.LAST_COMMIT }} -m "Package.swift for v${GITHUB_REF#refs/*/}"
        git checkout ${{ env.CURRENT_BRANCH }}
        git pull origin ${{ env.CURRENT_BRANCH }}
        git merge "commit-package-swift-ver-${GITHUB_REF#refs/*/}"
        git push origin